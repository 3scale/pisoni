#!/usr/bin/env ruby
require 'timeout'

def abort!
  puts "\nABORT: Some of your services don't boot correctly."
  exit 1
end

def wait_for(ip, port)
  "while ! timeout 1 bash -c 'cat < /dev/null > /dev/tcp/#{ip}/#{port}' 2> /dev/null; do echo \"Waiting for tcp://#{ip}:#{port}\"; sleep 1; done; echo \"tcp://#{ip}:#{port} is opened\""
end

def boot(service)
  service_tcp_uri = ENV.fetch("#{service.upcase}_PORT") { abort! }
  ip, port = service_tcp_uri.split("//").last.split(":")
  puts "Booting #{service} -> #{ip}:#{port}"
  system(wait_for(ip, port))
end

begin
  services = ENV["WAIT_FOR"].split(":")
  services.each do |service|
    Timeout.timeout(ENV.fetch('WAIT_TIMEOUT', 10).to_i) { boot(service) }
  end
  exec(*ARGV)
rescue Timeout::Error
  abort!
end
